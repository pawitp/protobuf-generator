// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testnumber.proto

public final class Testnumber {
  private Testnumber() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TestNumberOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TestNumber)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>fixed64 f64 = 1;</code>
     */
    long getF64();

    /**
     * <code>sfixed64 sf64 = 2;</code>
     */
    long getSf64();

    /**
     * <code>int32 i32 = 3;</code>
     */
    int getI32();

    /**
     * <code>int64 i64 = 4;</code>
     */
    long getI64();

    /**
     * <code>uint32 u32 = 5;</code>
     */
    int getU32();

    /**
     * <code>uint64 u64 = 6;</code>
     */
    long getU64();

    /**
     * <code>sint32 s32 = 7;</code>
     */
    int getS32();

    /**
     * <code>sint64 s64 = 8;</code>
     */
    long getS64();

    /**
     * <code>fixed32 f32 = 9;</code>
     */
    int getF32();

    /**
     * <code>sfixed32 sf32 = 10;</code>
     */
    int getSf32();

    /**
     * <code>float f = 11;</code>
     */
    float getF();

    /**
     * <code>double d = 12;</code>
     */
    double getD();
  }
  /**
   * Protobuf type {@code TestNumber}
   */
  public  static final class TestNumber extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TestNumber)
      TestNumberOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestNumber.newBuilder() to construct.
    private TestNumber(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestNumber() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestNumber(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              f64_ = input.readFixed64();
              break;
            }
            case 17: {

              sf64_ = input.readSFixed64();
              break;
            }
            case 24: {

              i32_ = input.readInt32();
              break;
            }
            case 32: {

              i64_ = input.readInt64();
              break;
            }
            case 40: {

              u32_ = input.readUInt32();
              break;
            }
            case 48: {

              u64_ = input.readUInt64();
              break;
            }
            case 56: {

              s32_ = input.readSInt32();
              break;
            }
            case 64: {

              s64_ = input.readSInt64();
              break;
            }
            case 77: {

              f32_ = input.readFixed32();
              break;
            }
            case 85: {

              sf32_ = input.readSFixed32();
              break;
            }
            case 93: {

              f_ = input.readFloat();
              break;
            }
            case 97: {

              d_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Testnumber.internal_static_TestNumber_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Testnumber.internal_static_TestNumber_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Testnumber.TestNumber.class, Testnumber.TestNumber.Builder.class);
    }

    public static final int F64_FIELD_NUMBER = 1;
    private long f64_;
    /**
     * <code>fixed64 f64 = 1;</code>
     */
    public long getF64() {
      return f64_;
    }

    public static final int SF64_FIELD_NUMBER = 2;
    private long sf64_;
    /**
     * <code>sfixed64 sf64 = 2;</code>
     */
    public long getSf64() {
      return sf64_;
    }

    public static final int I32_FIELD_NUMBER = 3;
    private int i32_;
    /**
     * <code>int32 i32 = 3;</code>
     */
    public int getI32() {
      return i32_;
    }

    public static final int I64_FIELD_NUMBER = 4;
    private long i64_;
    /**
     * <code>int64 i64 = 4;</code>
     */
    public long getI64() {
      return i64_;
    }

    public static final int U32_FIELD_NUMBER = 5;
    private int u32_;
    /**
     * <code>uint32 u32 = 5;</code>
     */
    public int getU32() {
      return u32_;
    }

    public static final int U64_FIELD_NUMBER = 6;
    private long u64_;
    /**
     * <code>uint64 u64 = 6;</code>
     */
    public long getU64() {
      return u64_;
    }

    public static final int S32_FIELD_NUMBER = 7;
    private int s32_;
    /**
     * <code>sint32 s32 = 7;</code>
     */
    public int getS32() {
      return s32_;
    }

    public static final int S64_FIELD_NUMBER = 8;
    private long s64_;
    /**
     * <code>sint64 s64 = 8;</code>
     */
    public long getS64() {
      return s64_;
    }

    public static final int F32_FIELD_NUMBER = 9;
    private int f32_;
    /**
     * <code>fixed32 f32 = 9;</code>
     */
    public int getF32() {
      return f32_;
    }

    public static final int SF32_FIELD_NUMBER = 10;
    private int sf32_;
    /**
     * <code>sfixed32 sf32 = 10;</code>
     */
    public int getSf32() {
      return sf32_;
    }

    public static final int F_FIELD_NUMBER = 11;
    private float f_;
    /**
     * <code>float f = 11;</code>
     */
    public float getF() {
      return f_;
    }

    public static final int D_FIELD_NUMBER = 12;
    private double d_;
    /**
     * <code>double d = 12;</code>
     */
    public double getD() {
      return d_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (f64_ != 0L) {
        output.writeFixed64(1, f64_);
      }
      if (sf64_ != 0L) {
        output.writeSFixed64(2, sf64_);
      }
      if (i32_ != 0) {
        output.writeInt32(3, i32_);
      }
      if (i64_ != 0L) {
        output.writeInt64(4, i64_);
      }
      if (u32_ != 0) {
        output.writeUInt32(5, u32_);
      }
      if (u64_ != 0L) {
        output.writeUInt64(6, u64_);
      }
      if (s32_ != 0) {
        output.writeSInt32(7, s32_);
      }
      if (s64_ != 0L) {
        output.writeSInt64(8, s64_);
      }
      if (f32_ != 0) {
        output.writeFixed32(9, f32_);
      }
      if (sf32_ != 0) {
        output.writeSFixed32(10, sf32_);
      }
      if (f_ != 0F) {
        output.writeFloat(11, f_);
      }
      if (d_ != 0D) {
        output.writeDouble(12, d_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (f64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, f64_);
      }
      if (sf64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(2, sf64_);
      }
      if (i32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, i32_);
      }
      if (i64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, i64_);
      }
      if (u32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, u32_);
      }
      if (u64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, u64_);
      }
      if (s32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, s32_);
      }
      if (s64_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, s64_);
      }
      if (f32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, f32_);
      }
      if (sf32_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(10, sf32_);
      }
      if (f_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, f_);
      }
      if (d_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, d_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Testnumber.TestNumber)) {
        return super.equals(obj);
      }
      Testnumber.TestNumber other = (Testnumber.TestNumber) obj;

      if (getF64()
          != other.getF64()) return false;
      if (getSf64()
          != other.getSf64()) return false;
      if (getI32()
          != other.getI32()) return false;
      if (getI64()
          != other.getI64()) return false;
      if (getU32()
          != other.getU32()) return false;
      if (getU64()
          != other.getU64()) return false;
      if (getS32()
          != other.getS32()) return false;
      if (getS64()
          != other.getS64()) return false;
      if (getF32()
          != other.getF32()) return false;
      if (getSf32()
          != other.getSf32()) return false;
      if (java.lang.Float.floatToIntBits(getF())
          != java.lang.Float.floatToIntBits(
              other.getF())) return false;
      if (java.lang.Double.doubleToLongBits(getD())
          != java.lang.Double.doubleToLongBits(
              other.getD())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + F64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getF64());
      hash = (37 * hash) + SF64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSf64());
      hash = (37 * hash) + I32_FIELD_NUMBER;
      hash = (53 * hash) + getI32();
      hash = (37 * hash) + I64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getI64());
      hash = (37 * hash) + U32_FIELD_NUMBER;
      hash = (53 * hash) + getU32();
      hash = (37 * hash) + U64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getU64());
      hash = (37 * hash) + S32_FIELD_NUMBER;
      hash = (53 * hash) + getS32();
      hash = (37 * hash) + S64_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getS64());
      hash = (37 * hash) + F32_FIELD_NUMBER;
      hash = (53 * hash) + getF32();
      hash = (37 * hash) + SF32_FIELD_NUMBER;
      hash = (53 * hash) + getSf32();
      hash = (37 * hash) + F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getF());
      hash = (37 * hash) + D_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getD()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Testnumber.TestNumber parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Testnumber.TestNumber parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Testnumber.TestNumber parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Testnumber.TestNumber parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Testnumber.TestNumber parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Testnumber.TestNumber parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Testnumber.TestNumber parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Testnumber.TestNumber parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Testnumber.TestNumber parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Testnumber.TestNumber parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Testnumber.TestNumber parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Testnumber.TestNumber parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Testnumber.TestNumber prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TestNumber}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TestNumber)
        Testnumber.TestNumberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Testnumber.internal_static_TestNumber_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Testnumber.internal_static_TestNumber_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Testnumber.TestNumber.class, Testnumber.TestNumber.Builder.class);
      }

      // Construct using Testnumber.TestNumber.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        f64_ = 0L;

        sf64_ = 0L;

        i32_ = 0;

        i64_ = 0L;

        u32_ = 0;

        u64_ = 0L;

        s32_ = 0;

        s64_ = 0L;

        f32_ = 0;

        sf32_ = 0;

        f_ = 0F;

        d_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Testnumber.internal_static_TestNumber_descriptor;
      }

      @java.lang.Override
      public Testnumber.TestNumber getDefaultInstanceForType() {
        return Testnumber.TestNumber.getDefaultInstance();
      }

      @java.lang.Override
      public Testnumber.TestNumber build() {
        Testnumber.TestNumber result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Testnumber.TestNumber buildPartial() {
        Testnumber.TestNumber result = new Testnumber.TestNumber(this);
        result.f64_ = f64_;
        result.sf64_ = sf64_;
        result.i32_ = i32_;
        result.i64_ = i64_;
        result.u32_ = u32_;
        result.u64_ = u64_;
        result.s32_ = s32_;
        result.s64_ = s64_;
        result.f32_ = f32_;
        result.sf32_ = sf32_;
        result.f_ = f_;
        result.d_ = d_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Testnumber.TestNumber) {
          return mergeFrom((Testnumber.TestNumber)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Testnumber.TestNumber other) {
        if (other == Testnumber.TestNumber.getDefaultInstance()) return this;
        if (other.getF64() != 0L) {
          setF64(other.getF64());
        }
        if (other.getSf64() != 0L) {
          setSf64(other.getSf64());
        }
        if (other.getI32() != 0) {
          setI32(other.getI32());
        }
        if (other.getI64() != 0L) {
          setI64(other.getI64());
        }
        if (other.getU32() != 0) {
          setU32(other.getU32());
        }
        if (other.getU64() != 0L) {
          setU64(other.getU64());
        }
        if (other.getS32() != 0) {
          setS32(other.getS32());
        }
        if (other.getS64() != 0L) {
          setS64(other.getS64());
        }
        if (other.getF32() != 0) {
          setF32(other.getF32());
        }
        if (other.getSf32() != 0) {
          setSf32(other.getSf32());
        }
        if (other.getF() != 0F) {
          setF(other.getF());
        }
        if (other.getD() != 0D) {
          setD(other.getD());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Testnumber.TestNumber parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Testnumber.TestNumber) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long f64_ ;
      /**
       * <code>fixed64 f64 = 1;</code>
       */
      public long getF64() {
        return f64_;
      }
      /**
       * <code>fixed64 f64 = 1;</code>
       */
      public Builder setF64(long value) {
        
        f64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 f64 = 1;</code>
       */
      public Builder clearF64() {
        
        f64_ = 0L;
        onChanged();
        return this;
      }

      private long sf64_ ;
      /**
       * <code>sfixed64 sf64 = 2;</code>
       */
      public long getSf64() {
        return sf64_;
      }
      /**
       * <code>sfixed64 sf64 = 2;</code>
       */
      public Builder setSf64(long value) {
        
        sf64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sf64 = 2;</code>
       */
      public Builder clearSf64() {
        
        sf64_ = 0L;
        onChanged();
        return this;
      }

      private int i32_ ;
      /**
       * <code>int32 i32 = 3;</code>
       */
      public int getI32() {
        return i32_;
      }
      /**
       * <code>int32 i32 = 3;</code>
       */
      public Builder setI32(int value) {
        
        i32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 i32 = 3;</code>
       */
      public Builder clearI32() {
        
        i32_ = 0;
        onChanged();
        return this;
      }

      private long i64_ ;
      /**
       * <code>int64 i64 = 4;</code>
       */
      public long getI64() {
        return i64_;
      }
      /**
       * <code>int64 i64 = 4;</code>
       */
      public Builder setI64(long value) {
        
        i64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 i64 = 4;</code>
       */
      public Builder clearI64() {
        
        i64_ = 0L;
        onChanged();
        return this;
      }

      private int u32_ ;
      /**
       * <code>uint32 u32 = 5;</code>
       */
      public int getU32() {
        return u32_;
      }
      /**
       * <code>uint32 u32 = 5;</code>
       */
      public Builder setU32(int value) {
        
        u32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 u32 = 5;</code>
       */
      public Builder clearU32() {
        
        u32_ = 0;
        onChanged();
        return this;
      }

      private long u64_ ;
      /**
       * <code>uint64 u64 = 6;</code>
       */
      public long getU64() {
        return u64_;
      }
      /**
       * <code>uint64 u64 = 6;</code>
       */
      public Builder setU64(long value) {
        
        u64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 u64 = 6;</code>
       */
      public Builder clearU64() {
        
        u64_ = 0L;
        onChanged();
        return this;
      }

      private int s32_ ;
      /**
       * <code>sint32 s32 = 7;</code>
       */
      public int getS32() {
        return s32_;
      }
      /**
       * <code>sint32 s32 = 7;</code>
       */
      public Builder setS32(int value) {
        
        s32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 s32 = 7;</code>
       */
      public Builder clearS32() {
        
        s32_ = 0;
        onChanged();
        return this;
      }

      private long s64_ ;
      /**
       * <code>sint64 s64 = 8;</code>
       */
      public long getS64() {
        return s64_;
      }
      /**
       * <code>sint64 s64 = 8;</code>
       */
      public Builder setS64(long value) {
        
        s64_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 s64 = 8;</code>
       */
      public Builder clearS64() {
        
        s64_ = 0L;
        onChanged();
        return this;
      }

      private int f32_ ;
      /**
       * <code>fixed32 f32 = 9;</code>
       */
      public int getF32() {
        return f32_;
      }
      /**
       * <code>fixed32 f32 = 9;</code>
       */
      public Builder setF32(int value) {
        
        f32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 f32 = 9;</code>
       */
      public Builder clearF32() {
        
        f32_ = 0;
        onChanged();
        return this;
      }

      private int sf32_ ;
      /**
       * <code>sfixed32 sf32 = 10;</code>
       */
      public int getSf32() {
        return sf32_;
      }
      /**
       * <code>sfixed32 sf32 = 10;</code>
       */
      public Builder setSf32(int value) {
        
        sf32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sf32 = 10;</code>
       */
      public Builder clearSf32() {
        
        sf32_ = 0;
        onChanged();
        return this;
      }

      private float f_ ;
      /**
       * <code>float f = 11;</code>
       */
      public float getF() {
        return f_;
      }
      /**
       * <code>float f = 11;</code>
       */
      public Builder setF(float value) {
        
        f_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float f = 11;</code>
       */
      public Builder clearF() {
        
        f_ = 0F;
        onChanged();
        return this;
      }

      private double d_ ;
      /**
       * <code>double d = 12;</code>
       */
      public double getD() {
        return d_;
      }
      /**
       * <code>double d = 12;</code>
       */
      public Builder setD(double value) {
        
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double d = 12;</code>
       */
      public Builder clearD() {
        
        d_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TestNumber)
    }

    // @@protoc_insertion_point(class_scope:TestNumber)
    private static final Testnumber.TestNumber DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Testnumber.TestNumber();
    }

    public static Testnumber.TestNumber getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestNumber>
        PARSER = new com.google.protobuf.AbstractParser<TestNumber>() {
      @java.lang.Override
      public TestNumber parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestNumber(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestNumber> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestNumber> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Testnumber.TestNumber getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TestNumber_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TestNumber_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020testnumber.proto\"\246\001\n\nTestNumber\022\013\n\003f64" +
      "\030\001 \001(\006\022\014\n\004sf64\030\002 \001(\020\022\013\n\003i32\030\003 \001(\005\022\013\n\003i64" +
      "\030\004 \001(\003\022\013\n\003u32\030\005 \001(\r\022\013\n\003u64\030\006 \001(\004\022\013\n\003s32\030" +
      "\007 \001(\021\022\013\n\003s64\030\010 \001(\022\022\013\n\003f32\030\t \001(\007\022\014\n\004sf32\030" +
      "\n \001(\017\022\t\n\001f\030\013 \001(\002\022\t\n\001d\030\014 \001(\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_TestNumber_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TestNumber_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TestNumber_descriptor,
        new java.lang.String[] { "F64", "Sf64", "I32", "I64", "U32", "U64", "S32", "S64", "F32", "Sf32", "F", "D", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
